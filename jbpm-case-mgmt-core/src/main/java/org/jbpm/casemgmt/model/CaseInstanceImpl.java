/*
 * Copyright 2015 JBoss by Red Hat.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jbpm.casemgmt.model;

import java.util.ArrayList;
import java.util.List;
import org.jbpm.casemgmt.api.CaseInstance;

/**
 *
 * @author salaboy
 */
public class CaseInstanceImpl implements CaseInstance {

    // temporal until its generated by the DB
    private static Long idGenerator = 0L;

    private Long id;
    private String name;
    private String description;
    private String status;
    private Long parentAdhocProcessInstance;
    private List<Long> taskIds; // ?? List<CaseTask>
    private List<Long> processInstanceIds; // ?? List<ProcessTask>
    private List<Long> caseIds; // ?? List<CaseTask>

    public CaseInstanceImpl() {
        this.id = ++idGenerator;
    }

    public CaseInstanceImpl(String name) {
        this();
        this.name = name;
    }

    @Override
    public Long getId() {
        return id;
    }

    @Override
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Override
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Override
    public Long getParentAdhocProcessInstance() {
        return parentAdhocProcessInstance;
    }

    @Override
    public void setParentAdhocProcessInstance(Long parentAdhocProcessInstance) {
        this.parentAdhocProcessInstance = parentAdhocProcessInstance;
    }

    @Override
    public List<Long> getProcessInstanceIds() {
        return processInstanceIds;
    }

    @Override
    public void setProcessInstanceIds(List<Long> processInstanceIds) {
        this.processInstanceIds = processInstanceIds;
    }

    @Override
    public List<Long> getTaskIds() {
        return taskIds;
    }

    @Override
    public void setTaskIds(List<Long> taskIds) {
        this.taskIds = taskIds;
    }

    @Override
    public List<Long> getCaseIds() {
        return caseIds;
    }

    @Override
    public void setCaseIds(List<Long> caseIds) {
        this.caseIds = caseIds;
    }

    @Override
    public void addHumanTaskId(Long taskId) {
        if (taskIds == null) {
            taskIds = new ArrayList<Long>();
        }
        taskIds.add(taskId);
    }

    @Override
    public void addProcessTaskId(Long processId) {
        if (processInstanceIds == null) {
            processInstanceIds = new ArrayList<Long>();
        }
        processInstanceIds.add(processId);
    }

    @Override
    public void addCaseTaskId(Long caseId) {
        if (caseIds == null) {
            caseIds = new ArrayList<Long>();
        }
        caseIds.add(caseId);
    }

}
